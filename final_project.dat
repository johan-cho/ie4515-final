#####################################
# dat file: Johan Cho 2023-11-01
#####################################

# SETS
set CARS:= Gretta Borax Tointer Ferby Pupo Molo;
set FACTORIES:= Unoristan Dosovo;

# PARAMS

# size description for symbolic parameters
param size_desc:=
    Gretta "midsize/family size"
    Borax "family size"
    Tointer "compact size/midsize"
    Ferby "compact size"
    Pupo "compact size/midsize"
    Molo "midsize";

# selling price in $1000
param selling_price: Unoristan Dosovo:=
    Gretta 20 27
    Borax 27 18
    Tointer 15 12
    Ferby 15 20
    Pupo 10 15
    Molo 18 15;

# variable cost in $1000
param variable_cost: Unoristan Dosovo:=
    Gretta 7 6
    Borax 9 9
    Tointer 6 11
    Ferby 9 6
    Pupo 6 9
    Molo 11 7;

# fixed cost in $1000, binary variable * fixed cost in objective function
param fixed_cost: Unoristan Dosovo:=
    Gretta 3 3
    Borax 4 1
    Tointer 1 4
    Ferby 2 2
    Pupo 1.5 1
    Molo 1 1.5;

# param selling_price: Unoristan Dosovo:=
#     Gretta 20000 27000
#     Borax 27000 18000
#     Tointer 15000 12000
#     Ferby 15000 20000
#     Pupo 10000 15000
#     Molo 18000 15000;

# param variable_cost: Unoristan Dosovo:=
#     Gretta 7000 6000
#     Borax 9000 9000
#     Tointer 6000 11000
#     Ferby 9000 6000
#     Pupo 6000 9000
#     Molo 11000 7000;

# param fixed_cost: Unoristan Dosovo:=
#     Gretta 3000 3000
#     Borax 4000 1000
#     Tointer 1000 4000
#     Ferby 2000 2000
#     Pupo 1500 1000
#     Molo 1000 1500;

# price ranking
param price: Unoristan Dosovo:=
    Gretta 3 3
    Borax 2 1
    Tointer 2 3
    Ferby 1 3
    Pupo 3 3
    Molo 3 1;

# quality ranking
param quality: Unoristan Dosovo:=
    Gretta 3 1
    Borax 1 3
    Tointer 3 2
    Ferby 3 3
    Pupo 3 3
    Molo 1 2;

# safety ranking
param safety: Unoristan Dosovo:=
    Gretta 1 3
    Borax 3 2
    Tointer 2 2
    Ferby 3 1
    Pupo 3 3
    Molo 2 3;

# luxury ranking
param luxury: Unoristan Dosovo:=
    Gretta 3 3
    Borax 2 2
    Tointer 2 2
    Ferby 1 1
    Pupo 3 3
    Molo 3 3;

# assembly time in hours
param assembly_time: Unoristan Dosovo:=
    Gretta 4 5
    Borax 5 2
    Tointer 2 1
    Ferby 2 5
    Pupo 1 3
    Molo 3 2;

# material cost in tons
param raw_material: Unoristan Dosovo:=
    Gretta 5 2
    Borax 5 3
    Tointer 2 5
    Ferby 1 2
    Pupo 2 1
    Molo 3 4;

#CONSTRAINTS

# minimum number of cars to produce, binary variable
param type_constr:=
    Unoristan 3
    Dosovo 4;

# maximum number of assembly hours
param assembly_constr:=
    Unoristan 8000
    Dosovo 7000;

# maximum number of tons of raw material
param material_constr:=
    Unoristan 10000
    Dosovo 12000;

# minimum number of cars to produce, or 0 if not produced
param car_min_constr: Unoristan Dosovo:=
    Gretta 0 900
    Borax 300 0
    Tointer 0 600
    Ferby 1000 0
    Pupo 900 300
    Molo 750 750;

# minimum safety ranking, binary variable * safety ranking
param safety_total_min_constr:=
    Unoristan 9
    Dosovo 10;